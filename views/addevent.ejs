<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Matches Details</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css"
      integrity="sha512-b2QcS5SsA8tZodcDtGRELiGv5SaKSk1vDHDaQRda0htPYWZ6046lr3kJ5bAAQdpV2mmA/4v0wQF9MyU6/pDIAg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.min.js"
      integrity="sha512-WW8/jxkELe2CAiE4LvQfwm1rajOS8PHasCCx+knHG0gBHt8EXxS6T6tJRTGuDQVnluuAvMxWF4j8SNFDKceLFg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="style.css" />
  </head>

  <body class="">
    <!-- Header Section -->
    <%- include ('headerpink') %>

    <!-- Main Content Section -->
    <div class="mx-auto mt-5 ">
      
<!-- Adding New Event  -->
<div class="container  mx-auto p-1">
  <div class="container w-75 mb-5   mx-auto ">
  <h1 class="text-3xl font-bold mb-3">Add Event</h1>

  <form id="dataForm" action="/addevent" method="POST" class=" " >
    <div class="mb-3">
      <label for="name" class="block mb-2 font-medium text-gray-900 dark:text-gray-300">Event Name</label>
      <select id="name" name="name" required class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
          <option class="bg-gradient " value="Conference Event">Conference Event</option>
          <option value="School Event">School Event</option>
          <option value="Wedding Event">Wedding Event</option>
      </select>
  </div>
    <div class="mb-3">
      <label for="id" class="block mb-2 font-medium text-gray-900 dark:text-gray-300">Description</label>
      <input type="text" id="description" name="description" required  placeholder="Write little description about event" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
    </div>
  
      <div class="mb-3">
        <label for="phone" class="block mb-2 font-medium text-gray-900 dark:text-gray-300">Venue</label>
        <input type="text" id="venue" required placeholder="Write venue of Event" name="venue" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
      </div>
      <div class="mb-3">
        <label for="tId" class="block mb-2 font-medium text-gray-900 dark:text-gray-300">Capcity</label>
        <input type="text" id="capacity" required placeholder="Write Capacity of event" name="capacity" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white">
    </div>
 

    <button type="submit" onclick="submitForm()" class="text-white bg-yellow-500 hover:bg-yellow-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Add </button>
  
    
  </form>


    <%- include('footer') %>
    
  
    <!-- JavaScript Section -->
    <script>
   

    // Set the Ticket ID on page load
    document.addEventListener("DOMContentLoaded", setRandomTicketId);

      function submitForm() {
        event.preventDefault();
    const nameInput = document.getElementById('name');
    const idInput = document.getElementById('description');
    const phoneInput = document.getElementById('venue');
    const tIdInput = document.getElementById('capacity');

    const name = nameInput.value;
    const description = idInput.value;
    const venue = phoneInput.value;
    const capacity = tIdInput.value;

    if (!name || !description || !venue || !capacity) {
        console.error('All fields must be filled out');
          // Display success alert using Tailwind CSS classes
          showAlert('All fields must be filled out', 'bg-red-500', 'text-white');
    
        return;
    }
    const data = { name, description, venue, capacity };

    fetch('/addevent', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(result => {
        console.log(result);
        // Handle success (e.g., display a success message to the user)

        // Clear input fields
        nameInput.value = '';
        idInput.value = '';
        phoneInput.value = '';
        tIdInput.value = '';

        // Display success alert using Tailwind CSS classes
        showAlert('Successfully added! Refresh page and check your name in the list', 'bg-green-500', 'text-white');
    })
    .catch(error => {
        console.error('Error:', error);
        // Handle error (e.g., display an error message to the user)
    });
}

function showAlert(message, bgClass, textClass) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-50 m-3 p-3 ${bgClass} ${textClass} rounded-md shadow-md`;
    alertDiv.textContent = message;

    document.body.appendChild(alertDiv);

    // Remove the alert after a few seconds (adjust the timeout as needed)
    setTimeout(() => {
        document.body.removeChild(alertDiv);
    }, 5000);
}



    </script>

  </body>
</html>
